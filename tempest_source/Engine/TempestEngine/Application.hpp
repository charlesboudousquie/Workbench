/*!***************************************************************************************
\file       Application.hpp
\author     Aaron Damyen
\date       5/14/2018
\copyright  All content Â© 2018-2019 DigiPen (USA) Corporation, all rights reserved.
\par        Project: Boomerang
\brief  Defines the application class.
*****************************************************************************************/
#pragma once

//========1st Party Includes============================================================//

//========3rd Party Includes============================================================//

// forward declarations
class engine;

////////==========================================================================////////
////////  Classes                                                                 ////////
////////==========================================================================////////

/*!***************************************************************************************
\par class: application
\brief   Provides a simple interface to the application-level commands available within the engine
*****************************************************************************************/
class application final
{
	////////========================================================================////////
	////////   Public                                                               ////////
	////////========================================================================////////
public:

	//////==============================================================================//////
	//////    (Non-)Static                                                              //////
	//////==============================================================================//////

	/*!***************************************************************************************
	\brief  Assigns a new reference to the engine object
	\param p_engine_ptr - pointer to the new engine.
	*****************************************************************************************/
	static void setEnginePtr(engine * p_engine_ptr);

	/*!***************************************************************************************
	\brief  Asks the engine to shut itself down, if possible.  Effect is not immediate.
	*****************************************************************************************/
	static void requestQuit();


	////////========================================================================////////
	////////   Private                                                              ////////
	////////========================================================================////////
private:

	//////==============================================================================//////
	//////    (Non-)Static                                                              //////
	//////==============================================================================//////

	static engine * engine_pointer; //!< Reference to the currently running engine.

};










