/*!***************************************************************************************
\file       Buffer.hpp
\author     Cody Cannell
\date       6/06/18
\copyright  All content Â© 2018-2019 DigiPen (USA) Corporation, all rights reserved.
\par        Project: TBD
\brief      The interface for a buffer
*****************************************************************************************/

#pragma once

#include <cstddef> //std::size_t

/////////========================================================================/////////
/////////  Class                                                                 /////////
/////////========================================================================/////////

/*!***************************************************************************************
\par class: iBuffer
\brief  The interface for a buffer
*****************************************************************************************/
class iBuffer
{
	////////========================================================================////////
	////////   Public                                                               ////////
	////////========================================================================////////
	public:
		///////==========================================================================///////
		///////    Static                                                                ///////
		///////==========================================================================///////

		//////============================================================================//////
		//////     Functions                                                              //////
		//////============================================================================//////

		/*!***************************************************************************************
		\brief  This is used to clean up both the gpu buffer object and and cpu buffer object
		*****************************************************************************************/
		virtual ~iBuffer() = default;

		/*!***************************************************************************************
		\brief  This gets the size of the inheriting buffer object
		\return The size of the buffer
		*****************************************************************************************/
		virtual size_t getBufferSize() const = 0;

		/*!***************************************************************************************
		\brief  This builds the inheriting buffer objects gpu equivalent
		*****************************************************************************************/
		virtual void build() = 0;

		/*!***************************************************************************************
		\brief  This is used to bind the inheriting buffer object to its gpu equivalent
		*****************************************************************************************/
		virtual void bind() = 0;

		/*!***************************************************************************************
		\brief  This unbinds the gpu bufferobject and sets
		*****************************************************************************************/
		virtual void unbind() const = 0;

		/*!***************************************************************************************
		\brief  This is a internal delete function 
		*****************************************************************************************/
		virtual void shutdown() = 0;
		///====================================================================================///
		///        Helper                                                                      ///
		///====================================================================================///

		//////============================================================================//////
		//////     Data                                                                   //////
		//////============================================================================//////

		////==================================================================================////
		////       Configurable                                                               ////
		////==================================================================================////

		////==================================================================================////
		////       Non-Configurable                                                           ////
		////==================================================================================////

		//======================================================================================//
		//         DO MORE COMBINATIONS BEYOND THIS POINT                                       //
		//======================================================================================//

	////////========================================================================////////
	////////   Protected                                                            ////////
	////////========================================================================////////
	protected:

		///////==========================================================================///////
		///////    Non-Static                                                            ///////
		///////==========================================================================///////

		//////==============================================================================//////
		//////     Data / Functions                                                         //////
		//////==============================================================================//////

		////================================================================================////
		////       Non-Configurable                                                         ////
		////================================================================================////

	////////========================================================================////////
	////////   Private                                                              ////////
	////////========================================================================////////
	private:
		///////==========================================================================///////
		///////    Non-Static                                                            ///////
		///////==========================================================================///////

		//////============================================================================//////
		//////     Data                                                                   //////
		//////============================================================================//////

		////================================================================================////
		////       Configurable                                                             ////
		////================================================================================////
};
