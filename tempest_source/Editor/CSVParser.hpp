/*!***************************************************************************************
\file       CSVParser.hpp
\author     Ryan Booth
\date       9/21/2018
\copyright  All content © 2018-2019 DigiPen (USA) Corporation, all rights reserved.
\par        Project: Boomerang
\brief		This is Cole's beautifully designed Telemetry Data Parser - Object Creator.
*****************************************************************************************/

#pragma once

//========Self Include==================================================================//
//========1st Party Includes============================================================//
//#include "Math/Vector3.hpp"
//========3rd Party Includes============================================================//
#include <string>
#include <vector>
//========Types=========================================================================//
//========Defines=======================================================================//
//========Forward Deceleration==========================================================//

/////////========================================================================/////////
///////// Namespace                                                              /////////
/////////========================================================================/////////

////////==========================================================================////////
////////  Enum(s) / Struct / Class                                                ////////
////////==========================================================================////////

/*!***************************************************************************************
\par class: classExample
\brief   This is a stub class to be used as a template / example for class formating.
*****************************************************************************************/
class CSVParser
{
	///////============================================================================///////
	///////   Public/Protected/Private                                                 ///////
	///////============================================================================///////
public:
	CSVParser(std::string p_file_name);

	void Load();

	std::vector<std::pair<std::string, std::vector<float>>> & getTransformData();

	/////================================================================================/////
	/////     Functions / Data                                                           /////
	/////================================================================================/////

	
	//======================================================================================//
	//        (Conversion )Constructor / Operators / Getters & Setters / Helper /Destructor //
	//======================================================================================//
private:
	std::string m_file_name;
	std::string m_component_name;
	std::vector<std::pair<std::string, std::vector<float>>> m_transform_data;
};


//////==============================================================================//////
//////    (Non-)Static                                                              //////
//////==============================================================================//////



////==================================================================================////
////      Configurable / Non-Configurable                                             ////
////==================================================================================////

////==================================================================================////
////      Pure-Virtual/Overridden/Virtual/Non-Virtual                                 ////
////==================================================================================////

//======================================================================================//
//        (Conversion )Constructor / Operators / Getters & Setters / Helper /Destructor //
//======================================================================================//

/*!***************************************************************************************
\brief  This just for giving an example of a function format.
\param exampleIn - dat old boring int
\return What is this returning?
*****************************************************************************************/

/*=======================================================================================/
/         Other                                                                          /
/=======================================================================================*/

