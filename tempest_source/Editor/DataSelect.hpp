/*!***************************************************************************************
\file       DataSelect.hpp
\author     Ryan Booth
\date       9/18/2018
\copyright  All content ï¿½ 2018-2019 DigiPen (USA) Corporation, all rights reserved.
\par        Project: Boomerang
\brief		This is Cole's beautifully designed Telemetry Data Parser.
*****************************************************************************************/

#pragma once

//========Self Include==================================================================//
//========1st Party Includes============================================================//
//========3rd Party Includes============================================================//
#include <vector>
#include <string>
#include "EngineController.hpp"
#include "Scaffolding/WindowBase.hpp"

//========Types=========================================================================//
//========Defines=======================================================================//
//========Forward Deceleration==========================================================//

/////////========================================================================/////////
///////// Namespace                                                              /////////
/////////========================================================================/////////
namespace Editor
{
	////////==========================================================================////////
	////////  Enum(s) / Struct / Class                                                ////////
	////////==========================================================================////////

	/*!***************************************************************************************
	\par class: dataSelect
	\brief   This class defines the functionality for parsing and selecting data within the
			 editor.
	*****************************************************************************************/
	class dataSelect : public windowBase
	{
		///////============================================================================///////
		///////   Public/Protected/Private                                                 ///////
		///////============================================================================///////
	public:
		dataSelect(editorWindow * p_parent_editor);

		/////================================================================================/////
		/////     Functions / Data                                                           /////
		/////================================================================================/////

		/*!***************************************************************************************
		\brief reset the list of files to default flags
		*****************************************************************************************/
		void Reset();

		/*!***************************************************************************************
		\brief refresh the list of files
		*****************************************************************************************/
		void Refresh();

	protected:
		/*!***************************************************************************************
		\brief check for button input, and execute command logic
		*****************************************************************************************/
		void onRender() override;

		//======================================================================================//
		//        (Conversion )Constructor / Operators / Getters & Setters / Helper /Destructor //
		//======================================================================================//
	private:

		/*!***************************************************************************************
		\brief ensures that the given file is compatible
		\param p_file_name name of a file to be validated
		\return bool - whether the file is valid
		*****************************************************************************************/
		bool ValidateFile(std::string p_file_name);

		/*!***************************************************************************************
		\brief
		\param p_file_name
		\return int - the integer representation of the date/time stamp of the file
		*****************************************************************************************/
		int GetFileDate(std::string p_file_name);

		int m_current_selected_file;
		std::vector<std::pair<int, std::string>> m_file_list; //!< list of files taken from data folder
		int m_selected_file; //!< currently selected file. requires input
		bool m_visible; //!< whether the dataselect tab is visible

		std::string m_digipen_team_shared_path = "S:\\Teams\\US\\_ShareWith\\supremetoyinc_ShareWith_everybody\\data\\logs\\"; //!< path of the public shared team folder. should work for any digipen machine

	};


	//////==============================================================================//////
	//////    (Non-)Static                                                              //////
	//////==============================================================================//////



	////==================================================================================////
	////      Configurable / Non-Configurable                                             ////
	////==================================================================================////

	////==================================================================================////
	////      Pure-Virtual/Overridden/Virtual/Non-Virtual                                 ////
	////==================================================================================////

	//======================================================================================//
	//        (Conversion )Constructor / Operators / Getters & Setters / Helper /Destructor //
	//======================================================================================//

	/*!***************************************************************************************
	\brief  This just for giving an example of a function format.
	\param exampleIn - dat old boring int
	\return What is this returning?
	*****************************************************************************************/

	/*=======================================================================================/
	/         Other                                                                          /
	/=======================================================================================*/

} // namespace Editor
